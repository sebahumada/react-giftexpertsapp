{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setstate","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","console","log","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGe,SAASA,EAAT,GAAuC,IAAjBC,EAAgB,EAAhBA,cAEjC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACQ,sBAAMC,SAVO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAI,OAAGP,GAAH,mBAAiBO,OACnCN,EAAc,MAKd,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBU,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,mCCTlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEN,mCACPC,EAHa,iDAGkCC,UAAUH,GAH5C,6BAEN,oCAFM,SAIAI,MAAMF,GAJN,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDC8BLO,EA1BM,SAAEf,GACnB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLS,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAsBA,OAjBAC,qBAAW,WACPpB,EAAQC,GACHoB,MAAK,SAAAC,GAAI,OACNH,EAAS,CACLX,KAAKc,EACLL,SAAQ,SAGrB,IASIC,GCbIK,EAZK,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAI7B,OACI,sBAAKqB,UAAU,2CAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QC2BDc,EA/BC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAGd,EAA+Be,EAAaf,GAAhCa,EAAZ,EAAON,KAAaS,EAApB,EAAoBA,QAOpB,OALAW,QAAQC,IAAIZ,GAMJ,qCACA,oBAAIO,UAAU,wCAAd,SAAuDvB,IAErDgB,GAAW,mBAAGO,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEIV,EAAOJ,KAAK,SAACC,GAAD,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aCrBlB,SAASkB,IAEpB,MAAoC3C,mBAAS,CAAC,iBAA9C,mBAAO4C,EAAP,KAAmB7C,EAAnB,KAQA,OACI,qCACI,8CACA,cAACD,EAAD,CAAaC,cAAeA,IAC5B,uBAIA,6BAEQ6C,EAAWrB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,W,MCnBtC+B,IAASC,OAEL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.275bb666.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function AddCategory({setCategories}) {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n    \r\n    const handleInputChange = (e) => {\r\n        \r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length >2){\r\n            setCategories(cats=>[inputValue,...cats]);\r\n            setInputValue('');\r\n        }        \r\n    }\r\n\r\n    return (                \r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={ handleInputChange}\r\n                />\r\n            </form>        \r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const apiKey='slXqgy6o9grP5zJ9IXyKmU78YNzOJHyd'\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}    ","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from './../helpers/getGifs';\r\n\r\n\r\nconst useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=> {\r\n        getGifs(category)\r\n            .then(imgs =>                 \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })                \r\n            )\r\n    }, []);   \r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data:[1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n\r\n    return state; // { data:[], loading:true}\r\n}\r\n\r\nexport default useFetchGifs\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n    //console.log( {id,title,url});\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={url} alt={title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import React from 'react'\r\nimport useFetchGifs from './../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem.js';\r\n// import { getGifs } from './../helpers/getGifs';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    console.log(loading);\r\n\r\n   \r\n\r\n\r\n    return (\r\n            <>\r\n            <h3 className=\"animate__animated animate__backInLeft\">{category}</h3>\r\n            \r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n\r\n            <div className=\"card-grid\">           \r\n            {\r\n                images.map( (img)=>(\r\n                    <GifGridItem \r\n                        key={img.id}\r\n                        {...img}/>\r\n                ))\r\n            }               \r\n           \r\n            </div>\r\n            </>\r\n\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid.js';\r\n\r\nexport default function GifExpertApp() {    \r\n    \r\n    const [categories, setCategories] = useState(['The Simpsons']);\r\n\r\n    // const handleAdd = () => {\r\n    //     //setCategories([...categories,'Supercampeones']);\r\n    //     //setCategories(['Supercampeones',...categories]);\r\n    //     setCategories(cats=>[...cats,'Supercampeones']);\r\n    // }\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>            \r\n            <hr></hr>\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid key={category} category={category} />                        \r\n                    ))                    \r\n                }\r\n                \r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n \n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}